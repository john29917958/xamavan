{"version":3,"file":"app.js","mappings":";;;;;;;;;;;;;;;AAAqF;AACrF;AACA;AACA;AACA,+CAA+C,8FAA0B;AACzE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsB;;;;;;;;;;;;;;;ACnBtB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,OAAO;AACtD;AACA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACsC;;;;;;;;;;;;;;;ACjJtC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACkB;;;;;;;;;;;;;;;ACpDlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,KAAK;AACL;AAC8B;;;;;;;;;;;;;;;AC3B9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI,qBAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACsB;;;;;;;UCtBtB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNkC;AACwB;AAChB;AACA;AAC1C;AACA;AACA;AACA,QAAQ,2CAAM;AACd;AACA,IAAI,mEAAkB;AACtB,IAAI,mDAAU;AACd,IAAI,mDAAU;AACd,CAAC","sources":["webpack://xamavan/./scripts/animations.ts","webpack://xamavan/./scripts/animations/networkBackgroundAnimation.ts","webpack://xamavan/./scripts/navbar.ts","webpack://xamavan/./scripts/scrollDownToButton.ts","webpack://xamavan/./scripts/transition.ts","webpack://xamavan/webpack/bootstrap","webpack://xamavan/webpack/runtime/define property getters","webpack://xamavan/webpack/runtime/hasOwnProperty shorthand","webpack://xamavan/webpack/runtime/make namespace object","webpack://xamavan/./scripts/app.ts"],"sourcesContent":["import { NetworkBackgroundAnimation } from \"./animations/networkBackgroundAnimation\";\nconst animations = {\n    initNetworkBgAnimation(elems) {\n        const elemsToInit = getElemsToInit(\".bg-animation-network\", elems);\n        const networkBackgroundAnimation = new NetworkBackgroundAnimation(elemsToInit);\n        networkBackgroundAnimation.init();\n    },\n};\nfunction getElemsToInit(defaultSelector, elems) {\n    let elemsToInit = null;\n    if (elems === undefined) {\n        const elems = document.querySelectorAll(defaultSelector);\n        elemsToInit = Array.from(elems);\n    }\n    else {\n        elemsToInit = Array.from(elems);\n    }\n    return elemsToInit;\n}\nexport { animations };\n","const mouse = {\n    x: 0,\n    y: 0,\n}; // mouse location\nclass NetworkBackgroundAnimation {\n    constructor(elems) {\n        this.elems = elems;\n        this.options = new Options();\n    }\n    init() {\n        for (const elem of this.elems) {\n            const canvas = this.getBgCanvas();\n            this.setParentElemPositionForCanvasToAlignWith(elem);\n            const animator = new Animator(elem, canvas, this.options);\n            animator.init();\n            elem.append(canvas);\n        }\n    }\n    getBgCanvas() {\n        const canvas = document.createElement(\"canvas\");\n        canvas.style.position = \"absolute\";\n        canvas.style.top = \"0\";\n        canvas.style.left = \"0\";\n        canvas.style.width = \"100%\";\n        canvas.style.height = \"100%\";\n        canvas.style.zIndex = \"-1\";\n        canvas.width = canvas.offsetWidth;\n        canvas.height = canvas.offsetHeight;\n        canvas.classList.add(\"trans-entrance-fade-in\", \"trans-d-1500\");\n        return canvas;\n    }\n    setParentElemPositionForCanvasToAlignWith(elem) {\n        if (elem.style.position.length === 0) {\n            elem.style.position = \"relative\";\n        }\n    }\n}\nclass Animator {\n    constructor(elem, canvas, options) {\n        this.elem = elem;\n        this.canvas = canvas;\n        this.options = options;\n        this.ctx = canvas.getContext(\"2d\");\n        this.stars = [];\n    }\n    init() {\n        this.canvas.width = window.innerWidth;\n        this.canvas.height = window.innerHeight;\n        // Push stars to array\n        for (var i = 0; i < this.options.numOfStars; i++) {\n            this.stars.push({\n                x: Math.random() * this.canvas.width,\n                y: Math.random() * this.canvas.height,\n                radius: Math.random() * 1 + 4.5,\n                vx: Math.floor(Math.random() * 50) - 25,\n                vy: Math.floor(Math.random() * 50) - 25,\n            });\n        }\n        window.addEventListener(\"resize\", this.updateCanvasOnResize.bind(this, this.canvas));\n        this.canvas.addEventListener(\"mousemove\", (e) => {\n            mouse.x = e.clientX;\n            mouse.y = e.clientY;\n        });\n        this.tick();\n    }\n    updateCanvasOnResize(canvas) {\n        this.options.numOfStars = getNumOfStars();\n        this.options.lineWidth = getLineWidth();\n        canvas.width = canvas.offsetWidth;\n        canvas.height = canvas.offsetHeight;\n    }\n    // Update star locations\n    update() {\n        for (var i = 0, x = this.stars.length; i < x; i++) {\n            const s = this.stars[i];\n            s.x += s.vx / this.options.fps;\n            s.y += s.vy / this.options.fps;\n            if (s.x < 0 || s.x > this.canvas.width) {\n                s.vx = -s.vx;\n            }\n            if (s.y < 0 || s.y > this.canvas.height) {\n                s.vy = -s.vy;\n            }\n        }\n    }\n    // Draw the scene\n    draw() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        //ctx.globalCompositeOperation = \"lighter\";\n        for (var i = 0, x = this.stars.length; i < x; i++) {\n            var s = this.stars[i];\n            this.ctx.fillStyle = \"rgba(0, 0, 0, 0.025)\";\n            this.ctx.beginPath();\n            this.ctx.arc(s.x, s.y, s.radius, 0, 2 * Math.PI);\n            this.ctx.fill();\n            // ctx.fillStyle = \"#fafafa\";\n            // ctx.stroke();\n        }\n        this.ctx.beginPath();\n        for (let i = 0, x = this.stars.length; i < x; i++) {\n            const starI = this.stars[i];\n            this.ctx.moveTo(starI.x, starI.y);\n            if (this.distance(mouse, starI) < 150)\n                this.ctx.lineTo(mouse.x, mouse.y);\n            for (let j = 0, x = this.stars.length; j < x; j++) {\n                var starII = this.stars[j];\n                if (this.distance(starI, starII) < 150) {\n                    this.ctx.lineTo(starII.x, starII.y);\n                }\n            }\n        }\n        this.ctx.lineWidth = this.options.lineWidth;\n        this.ctx.strokeStyle = \"rgba(0, 0, 0, 0.025)\";\n        this.ctx.stroke();\n    }\n    distance(point1, point2) {\n        var xs = 0;\n        var ys = 0;\n        xs = point2.x - point1.x;\n        xs = xs * xs;\n        ys = point2.y - point1.y;\n        ys = ys * ys;\n        return Math.sqrt(xs + ys);\n    }\n    tick() {\n        this.draw();\n        this.update();\n        requestAnimationFrame(this.tick.bind(this));\n    }\n}\nclass Options {\n    constructor() {\n        this.fps = 60;\n        this.numOfStars = getNumOfStars();\n        this.lineWidth = getLineWidth();\n    }\n}\nfunction getNumOfStars() {\n    const numOfStars = window.innerWidth <= 576 ? 47 : 100;\n    return numOfStars;\n}\nfunction getLineWidth() {\n    const lineWidth = window.innerWidth <= 576 ? 0.75 : 1.2;\n    return lineWidth;\n}\nexport { NetworkBackgroundAnimation };\n","const navbar = {\n    init: function (navbar) {\n        initToggleFeature(navbar);\n        initDropdowns(navbar);\n    },\n};\nfunction initToggleFeature(navbar) {\n    const navToggler = navbar.querySelector(\".nav-toggler\");\n    navToggler === null || navToggler === void 0 ? void 0 : navToggler.addEventListener(\"click\", () => {\n        toggle(navbar);\n    });\n    const navCover = document.createElement(\"div\");\n    navCover.classList.add(\"nav-cover\");\n    navCover.addEventListener(\"click\", () => {\n        navbar.classList.remove(\"toggled\");\n    });\n    navbar.appendChild(navCover);\n}\nfunction initDropdowns(navbar) {\n    const dropdowns = navbar.querySelectorAll(\"li.dropdown\");\n    for (const dropdown of dropdowns) {\n        const menu = dropdown.querySelector(\".dropdown-menu\");\n        dropdown.addEventListener(\"click\", function (e) {\n            toggle(dropdown);\n            const elemBounds = menu.getBoundingClientRect();\n            const elemBottom = elemBounds.bottom;\n            const windowBottom = window.innerHeight;\n            if (elemBottom > windowBottom) {\n                menu.style.height =\n                    (elemBounds.height - (elemBottom - windowBottom)).toString() + \"px\";\n            }\n            else {\n                menu.style.height = \"auto\";\n            }\n            e.stopPropagation();\n            window.addEventListener(\"click\", handleClickOutsideDropdown);\n            function handleClickOutsideDropdown() {\n                toggle(dropdown);\n                window.removeEventListener(\"click\", handleClickOutsideDropdown);\n            }\n        });\n    }\n}\nfunction toggle(elem) {\n    const isElemToggled = elem.classList.contains(\"toggled\");\n    if (isElemToggled) {\n        elem.classList.remove(\"toggled\");\n    }\n    else {\n        elem.classList.add(\"toggled\");\n    }\n}\nexport { navbar };\n","const scrollDownToButton = {\n    init(elements) {\n        let scrollDownToButtons = null;\n        if (elements === undefined) {\n            let buttons = document.querySelectorAll(\".btn-scroll-down-to\");\n            scrollDownToButtons = Array.from(buttons);\n        }\n        else {\n            scrollDownToButtons = Array.from(elements);\n        }\n        for (let button of scrollDownToButtons) {\n            const target = button.getAttribute(\"data-target\");\n            if (target !== null && target !== undefined) {\n                const targetElem = document.querySelector(target);\n                button.addEventListener(\"click\", () => {\n                    window.scrollTo({\n                        top: targetElem.offsetTop -\n                            5 *\n                                parseFloat(getComputedStyle(document.documentElement).fontSize),\n                        left: 0,\n                        behavior: \"smooth\",\n                    });\n                });\n            }\n        }\n    },\n};\nexport { scrollDownToButton };\n","const transition = {\n    init: function (elements) {\n        const observerObj = new IntersectionObserver((entries) => {\n            for (const entry of entries) {\n                if (entry.isIntersecting) {\n                    entry.target.style.animationPlayState = \"running\";\n                }\n            }\n        }, { rootMargin: \"-30px\" });\n        let elemsToObserve = null;\n        if (elements === undefined) {\n            const elems = document.querySelectorAll(\".trans-on-viewport-entry\");\n            elemsToObserve = Array.from(elems);\n        }\n        else {\n            elemsToObserve = Array.from(elements);\n        }\n        for (const elem of elemsToObserve) {\n            observerObj.observe(elem);\n        }\n    },\n};\nexport { transition };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { navbar } from \"./navbar\";\nimport { scrollDownToButton } from \"./scrollDownToButton\";\nimport { transition } from \"./transition\";\nimport { animations } from \"./animations\";\nwindow.addEventListener(\"load\", () => {\n    const navbars = document.querySelectorAll(\"nav.nav\");\n    for (const navbarElem of navbars) {\n        navbar.init(navbarElem);\n    }\n    scrollDownToButton.init();\n    transition.init();\n    animations.initNetworkBgAnimation();\n});\n"],"names":[],"sourceRoot":""}