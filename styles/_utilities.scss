@use "sass:map";

.text-primary {
  color: $text-primary;
}

.text-default {
  color: $text-default;
}

.text-white {
  color: $white;
}

.text-default-lighter {
  color: $gray-500;
}

.text-gray-400 {
  color: $gray-400;
}

.text-gray-700 {
  color: $gray-700;
}

.bg-dark {
  background-color: $bg-dark;
}

.bg-black {
  background-color: black;
}

.bg-gray-100 {
  background-color: $gray-100;
}

.bg-gray-200 {
  background-color: $gray-200;
}

.d-none {
  display: none;
}

.m-none {
  margin: 0;
}

.p-none {
  padding: 0;
}

@for $i from 1 through 5 {
  .mb-#{$i} {
    margin-bottom: #{$i}rem;
  }

  .p-#{$i} {
    padding: #{$i}rem;
  }

  .pt-#{$i} {
    padding-top: #{$i}rem;
  }

  .pb-#{$i} {
    padding-bottom: #{$i}rem;
  }

  .pr-#{$i} {
    padding-right: #{$i}rem;
  }

  .pl-#{$i} {
    padding-left: #{$i}rem;
  }
}

@media only screen and (min-width: map.get($grid-breakpoints, "md")) {
  .d-md-none {
    display: none;
  }

  .d-md-block {
    display: block;
  }

  .m-md-none {
    margin: 0;
  }

  .p-md-none {
    padding: 0;
  }

  .pr-md-half {
    padding-right: 0.5rem;
  }

  .pl-md-half {
    padding-left: 0.5rem;
  }

  @for $i from 1 through 5 {
    .pt-md-#{$i} {
      padding-top: #{$i}rem;
    }

    .pb-md-#{$i} {
      padding-bottom: #{$i}rem;
    }

    .pl-md-#{$i} {
      padding-left: #{$i}rem;
    }

    .pr-md-#{$i} {
      padding-right: #{$i}rem;
    }

    .mb-md-#{$i} {
      margin-bottom: #{$i}rem;
    }
  }
}

@media only screen and (min-width: map.get($grid-breakpoints, "lg")) {
  .m-lg-none {
    margin: 0;
  }

  @for $i from 1 through 5 {
    .pr-lg-#{$i} {
      padding-right: #{$i}rem;
    }

    .pl-lg-#{$i} {
      padding-left: #{$i}rem;
    }
  }
}

.d-flex {
  display: flex;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.align-items-center {
  align-items: center;
}

.vh-100 {
  height: calc(100vh - $nav-height);
}

.min-vh-100 {
  min-height: calc(100vh - $nav-height);
}

@media (orientation: portrait) {
  .min-vh-100-portrait-only {
    min-height: calc(100vh - $nav-height);
  }
}

@media only screen and (min-width: map.get($grid-breakpoints, "lg")) {
  .vh-md-100 {
    height: calc(100vh - $nav-height);
  }
}

.cover {
  background-color: $cover-color;
  width: 100%;
  height: 100%;
}

.fill-parent {
  width: 100%;
  height: 100%;
}

.square {
  position: relative;
  width: 100%;
  padding-top: 100%;
  overflow: hidden;
}

@mixin max-lines($num-of-lines) {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: $num-of-lines;
  line-clamp: $num-of-lines;
  -webkit-box-orient: vertical;
}
